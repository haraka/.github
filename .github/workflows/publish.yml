name: publish

on:
  workflow_call:

env:
  CI: true

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # last 2 commits
      - name: check version change
        id: check
        run: |
          PREV_VERSION=$(git show HEAD^:package.json | jq -r .version)
          CURR_VERSION=$(jq -r .version package.json)
          echo "Previous: $PREV_VERSION"
          echo "Current:  $CURR_VERSION"
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          echo "version=$CURR_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: version
    if: needs.version.outputs.changed == 'true'
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - uses: actions/setup-node@v4
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm test

  publish-npm:
    needs: [build]
    runs-on: ubuntu-latest
    environment: npm
    steps:
      - uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
      - uses: actions/checkout@v4
      - name: publish to NPM
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed to create tags and releases
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch all tags
      - id: tag-check
        run: |
          TAG="v${{ needs.version.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Create Git tag and push
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ needs.version.outputs.version }}
          git push origin v${{ needs.version.outputs.version }}
      - name: Create GitHub Release
        if: steps.tag-check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.version.outputs.version }}
          name: ${{ needs.version.outputs.version }}
          generate_release_notes: false

  publish-gpr:
    needs: [build]
    runs-on: ubuntu-latest
    environment: ghpm
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com/
          scope: "@haraka"
      - name: rename package with @haraka scope
        run: node .release/npm/prepend-scope.cjs @haraka
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
